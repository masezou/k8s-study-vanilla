TL;DR
```
sudo -i
git clone https://github.com/masezou/k8s-study-vanilla --depth 1
cd k8s-study-vanilla
vi 3-configk8s.sh
 -> Specify IP range
./0-minio.sh ; ./1-tools.sh ; ./2-buildk8s-lnx.sh ; ./3-configk8s.sh ; ./4-csi-storage.sh
vi 5-csi-vsphere.sh
 ->Input vSphere configuration.
./5-csi-vsphere.sh
./6-minio.sh
./K1-kasten.sh ; ./K3-kasten-vsphere.sh
```

Summary
Build Kubernetes environment with most smallest vSphere and build Backup environment.

Less impact to already exist vSphere environment and consume less vSphere resource.
By setting up a loadbalancer environment, you can access without port forwarding and improve the portability of the deployment used in the public cloud.
By using the vSphere CSI driver, you can also experience using the Disk object called FCD supported from vSphere 6.7 U3.

What consists of this script
Container environment
   Kubernetes 1.23.10/containerd.io 1.6.8 (1node)
    CNI: Metallb/Ingress
    CSI: Longhorn/NFS-Sub/vSphere-CSI

Additional Environment
    Minio Object Storage
    NFS Server for NFS-SUB
    Docker Registry for Airgap image
    Dynamic DNS (External-DNS)
    
--------
Requirement
vSphere
  vSphere 6.7U3 (1vCenter and 1 ESXi Server and datastore. Any datastore will do.)
  VM Resource 4vCPU 8-16GB RAM 200GB HDD minimum
  vSphere Cluster and vSAN is option. (It is not mandatory.)
  There is no special setting in vCenter. (The script will create storage policy for vSphere CSI driver.)

Network
  Internet connection
  1 network segment
    for Ubuntu VM
      ex. 192.168.133.83
    for Loadbalancer
       ex. 192.168.133.208/28
Standard vSwitch and port group will worked. (Any switch will work!)

VM Configuration
 OS: Ubuntu Server 20.04.4 x 1
 VM configuration
   CPU:  4vCPU above 
   RAM: 8GB above
   HDD1: 200GB above (At least 50GB)
   Advanced Configuration: Set "disk.EnableUUID=true" "ctkEnabled=TRUE"  (It is very imoortant!!!)

Ubuntu Install
  HOSTNAME should be lower case and single hostname. Example: k8s-demo1
  There is no special setting. 
    But I recommend to 
       use xfs.
       IP address will be work with DHCP and Static IP address.
       Install only OpenSSH server. (No distribution's docker package)
   If you added HDD2 for openebs, The hdd need to be unused state (No partition table and filesystem).

-----
Script execution
1. be root user
sudo -i

2. Clone script file
git clone https://github.com/masezou/k8s-study-vanilla
cd k8s-study-vanilla

3. Edit Script files
  vi 3-configk8s.sh
       Change  IPRANGE="192.168.133.208/28" to your subnet.
         
  vi 5-csi-vsphere.sh
       #For vSphere CSI/Tanzu
       VSPHEREUSERNAME="administrator@vsphere.local"
       VSPHEREPASSWORD="PASSWORD"
       VSPHERESERVER="YOUR_vCENTER_FQDN"
       VSPHERESERVERIP="YOUR_vCENTE_IP"
       VSPPHEREDATASTORE="YOUR_DATASTORE"

4. Execute script for building Kubernetes
  ./0-minio.sh ; ./1-tools.sh ; ./2-buildk8s-lnx.sh ; ./3-configk8s.sh ; ./4-csi-storage.sh

5. Verify for Kubernetes
  kubectl get nodes
    1 node only appeared
   kubectl get pod -A
    All pod are running/Complete
  kubectl get svc -A
   You can see dashboard-service-lb has Loadbalancer IP address. You can access Kubernetes Dashboard.
  kubectl get sc
   You can see longhorn (default) and nfs-sub
   If you want to use CSI Snapshot on longhorn, you need to setup backup target.
   https://longhorn.io/docs/1.2.4/snapshots-and-backups/backup-and-restore/set-backup-target/
   
6. Install vSphere CSI Driver
   ./5-csi-vsphere.sh

7. Verify for vSphere CSI Driver
  kubectl get sc
   You can see longhorn, nfs-sub, vsphere-sc(default)
   
   Trouble Shooting
       Check Storage Policy in vCenter.
         k8s-policy will be created and the policy point to datastore.
       ls -l /dev/disk/by-id/wwn-*
         If there is no device, you may forget to set DISKUUID.

If there is no issue. You can end root login session with exit command.

If you want to check installation summary again, run
cd ~/k8s-study-vanilla
bash ./result.sh
